version: '3.8'

services:
  books_db:
    image: postgres:13
    container_name: books_db
    environment:
      POSTGRES_DB: books_db
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - books_data:/var/lib/postgresql/data
      - ./init_db/init_books.sql:/docker-entrypoint-initdb.d/init_books.sql
    networks:
      - my_network

  users_db:
    image: postgres:13
    container_name: users_db
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - users_data:/var/lib/postgresql/data
      - ./init_db/init_users.sql:/docker-entrypoint-initdb.d/init_users.sql
    networks:
      - my_network

  orders_db:
    image: postgres:13
    container_name: orders_db
    environment:
      POSTGRES_DB: orders_db
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - orders_data:/var/lib/postgresql/data
      - ./init_db/init_orders.sql:/docker-entrypoint-initdb.d/init_orders.sql
    networks:
      - my_network

  books_service:
    build:
      context: ./books_service
    container_name: books_service
    ports:
      - "5001:5001"
    depends_on:
      - books_db
    networks:
      - my_network

  users_service:
    build:
      context: ./users_service
    container_name: users_service
    ports:
      - "5002:5002"
    depends_on:
      - users_db
    networks:
      - my_network

  orders_service:
    build:
      context: ./orders_service
    container_name: orders_service
    ports:
      - "5003:5003"
    depends_on:
      - orders_db
      - books_db
      - users_db
    networks:
      - my_network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "81:80"
    depends_on:
      - books_service
      - users_service
      - orders_service
    networks:
      - my_network


volumes:
  books_data:
  users_data:
  orders_data:

networks:
  my_network:
    driver: bridge
